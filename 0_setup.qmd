---
title: "Required Components"
format: html
bibliography: bibtexlib.bib
---

::: custom-header-title
Identification of Rust Fungal Species through Metabarcoding and AODP
:::

[YOU MUST COMPLETE THE ENVIRONMENT SETUP BEFORE ATTENDING THE WORKSHOP.]{style="color:red; font-weight:bold;"}

## üíª Operating System

You should use a laptop with **Linux** operational system for this workshop.\
*Windows users should install a Linux virtual machine via [VirtualBox](https://www.virtualbox.org/) or use [WSL2](https://learn.microsoft.com/en-us/windows/wsl/install).*

------------------------------------------------------------------------

## üêç Conda or Mamba Setup

We will use **Conda** (or **Mamba**)[^1] to manage software environments.

[^1]: Mamba is a reimplementation of Conda in C++ for speed and faster environment handling.

-   Recommended: [Mambaforge](https://github.com/conda-forge/miniforge#mambaforge){target="_blank"}
-   Alternative: [Miniconda](https://docs.conda.io/en/latest/miniconda.html){target="_blank"}

#### ‚úÖ Test your installation:

::: {.callout-note title="BASH Block"}
```{bash, eval=FALSE}
which conda
conda --version

which mamba
mamba --version

#-------------------
# If your shell hasn‚Äôt been properly initialized for Mamba to manage environments like conda activate does.
# do the following steps:
#-------------------
# 1. obtain mamba base environment: 
mamba info
# from the output, find "base environment : /gpfs/fs7/aafc/labs/chenw_lab/code/software/mambaforge"

# 2. run the following command ONCE, replace the path to your own mamba base environment
# mamba shell init --shell bash --root-prefix=/gpfs/fs7/aafc/labs/chenw_lab/code/software/mambaforge

# 3. Then restart your terminal or run:
# source ~/.bashrc 

# To set mamba as the default (for its performance)
# add this to your ~/.bashrc
# export PATH="/gpfs/fs7/aafc/labs/chenw_lab/code/software/mambaforge/bin:$PATH"
# source ~/.bashrc

```
:::

------------------------------------------------------------------------

## üîß Git Installation

**Git** is a version control system used to track changes and collaborate on data projects, including scripts, data, figures, and documents.

üìå [Install Git](http://happygitwithr.com/install-git.html){target="_blank"} for your operating system.

::: {.callout-note title="BASH Block"}
```{bash clone-git-repo, eval=FALSE, results='hide'}

# 1. clone the github repository
git clone https://github.com/WenChenAAFC/rust_fungi_identification_using_metabarcoding_and_AODP.git

# 2. switch to the working directory
cd rust_fungi_identification_using_metabarcoding_and_AODP

# 3. get the path of the working directory
wkdir=`pwd` # NO space
echo $wkdir
ls -lah

# 4. Examine the folder structure;
# if you do not have tree command in the system
find . -type d | sed -e 's/[^-][^\/]*\//|   /g' -e 's/| *\([^|]\)/+-- \1/'
# Lists all directories (find . -type d)
# Replaces each /-based level with indentation (| )
# Marks the final directory component with a +-- to mimic the tree command.

```
:::

------------------------------------------------------------------------

## ‚öôÔ∏è Installing AODP with dependencies and other tools

::: {.callout-note title="BASH Block"}
```{bash install-aodp-in-conda-env, eval=FALSE, results='hide'}

# Check your working directory, should be PATH_to_rust_fungi_identification_using_metabarcoding_and_AODP
echo $wkdir
cd $wkdir

# 1. (Optional) Reinstall mamba if it‚Äôs misbehaving
# conda activate base
# conda remove mamba --yes
# conda clean --all --yes
# conda install -c conda-forge mamba --yes

# 2. (Optional) Remove any old training env, for example:
# mamba env remove -n aodp-training --yes

# 3. Create a fresh aodp-training env with the core dependencies
mamba create -n aodp-training -c conda-forge -c bioconda \
  gcc_linux-64=10.4.0 \
  gxx_linux-64=10.4.0 \
  make \
  perl \
  perl-bioperl \
  blast \
  --yes

# 4. (Optional) Add ITSx
mamba install -n aodp-training -c conda-forge -c bioconda itsx --yes
which ITSx

# 5. Activate and verify
mamba activate aodp-training

# 5a. Check Perl
which perl
perl -MBio::Seq -e 'print "Bioperl is working\n";' \
  || { 
       export PATH="$CONDA_PREFIX/bin:$PATH"; 
       hash -r; 
       which perl; 
       perl -MBio::Seq -e 'print "Bioperl is working\n";' 
     }
mamba list perl-bioperl

# 6. Build & install AODP
cd aodp_v2.0_release
tar xvf aodp-2.5.0.1.tar.gz
cd aodp-2.5.0.1

export CXXFLAGS="-std=c++11"
./configure \
  BIN_TARGET_DIR="$PWD" \
  MAN_TARGET_DIR="$PWD/man"

make clean && make
make install

# 7. Temporally add aodp to PATH
export PATH="$PATH:$PWD"; # 

# 8. to permanently add aodp to PATH,
# add above line to your ~/.bashrc 
# e.g. add "export PATH="$PATH:/gpfs/fs7/aafc/labs/chenw_lab/workspace/chenw/RustIDing_using_metabarcoding_and_AODP/aodp_v2.0_release/aodp-2.5.0.1"
# source ~/.bashrc

# 8. Test installation
which aodp
aodp --help

#------------------------------
# 9. (Optonal) check other software installed, 
#------------------------------
# [ITSx is an open source software utility to extract the highly variable ITS1 and ITS2 subregions from ITS sequences, which is commonly used as a molecular barcode for e.g. fungi.](https://microbiology.se/software/itsx/)
which ITSx
ITSx --help

# To deactivate environment
mamba deactivate

```
:::

## üß¨ Review other data folders and accessory scripts

::: {.callout-note title="BASH Block"}
```{bash project-folder, eval=TRUE}

# 1. QIIME2 outputs
ls -lah qiime2.outputs_and_metadata

# 2. The Rust ITS2 Database 
ls -lah refDBs 
# find CR-ITS2-refDB -this is a high-quality, curated ITS2 reference database for cereal rust fungal species or species complexes, compiled by Dr. Sarah Hambleton [@RN3722]

# 3. Additional R functions
ls -lah scripts  
# find function.R ‚Äî this script contain an R function that wraps DNA sequences in HTML spans with nucleotide-specific colors, and then prints them using the htmltools::HTML() function so Quarto renders it with full color in HTML output.
```
:::

## üìä R and RStudio Setup

1.  Install R and RStudio

-   [R](http://www.r-project.org){target="_blank"}
-   [RStudio Desktop](https://www.rstudio.com/products/rstudio/download/){target="_blank"}

2.  Installing the required R packages

::: {.callout-note title="R Block"}
```{r install-packages, eval = TRUE}

# 1. CRAN packages
required_cran <- c("openxlsx", # Read, write, and edit Microsoft Excel file
                   "dplyr", # data manipulation: filter, select, mutate, summarize, join, etc.
                   "tidyr", # turning ‚Äúmessy‚Äù data into tidy data frames.
                   "stringr", # simple wrappers for string operations (pattern matching, replacement, etc.).
                   "tibble",  # Modern reimagining of data.frame: better printing, stricter checks, etc
                   "splitstackshape", # Stack and reshape datasets after splitting concatenated values
                   "purrr", # Functional-programming tools for working with lists/vectors.
                   "ggplot2", # creating graphics, based on ‚ÄúThe Grammar of Graphics.
                   "cowplot", # Extensions to ggplot2 for arranging multiple plots and adding annotations.
                   "ape", # Analyses of phylogenetics and evolution: tree manipulation, plotting, etc
                   "phangorn" # Phylogenetic inference and evolutionary analyses
                   )
if (!requireNamespace(required_cran, quietly = TRUE)) {
  install.packages(required_cran, repos = "http://cran.rstudio.com", dependencies = TRUE)
}

# 2. Bioconda packages:
if (!requireNamespace("BiocManager", quietly = TRUE)) {
  install.packages("BiocManager")
}

required_bioc <- c("phyloseq", # Import, store, analyze and graph microbiome census data (OTUs, taxonomy, phylogeny, sample data).
                    "Biostrings", # Efficient containers and utilities for biological sequences (DNA, RNA, AA strings).
                   "ggtree", # Grammar-of-graphics plotting and annotation of phylogenetic trees.
                   "msa", # Interface to multiple sequence alignment algorithms (ClustalW/Omega, MUSCLE) in R.
                   "ggmsa", # Alignment visualization in a ggplot2-style (sequence and tree insets).
                   "treeio" # Import, export, and manipulate richly annotated phylogenetic tree formats (e.g. Newick, Nexus).
                   )
if (!requireNamespace(required_bioc, quietly = TRUE)) {
  BiocManager::install(required_bioc)
}

# 3. Alternatively, # 3. Install ggmsa from GitHub via devtools
if (!requireNamespace("devtools", quietly = TRUE)) {
  install.packages("devtools")
}
devtools::install_github("YuLab-SMU/ggmsa")

# Verify installation
packageVersion("ggmsa") 

# 4. Check your R session
sessionInfo() # This command will tell you information about your current R session

```
:::
