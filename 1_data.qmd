---
title: "Data used for this workshop"
format: html
bibliography: bibtexlib.bib
---

::: custom-header-title
Identification of Rust Fungal Species through Metabarcoding and AODP
:::

## Background

Air samples were collected by Burkard Cyclone spore samplers from three pilot sites in British Columbia during 2015-2018 and five sites in Alberta in 2018, western Canada. Sampling sites at Agassiz and Armstrong are 230 km apart, 803 km between those at Agassiz and Dawson Creek and 645 km between those at Armstrong and Dawson Creek. Airborne spores were systematically collected each week, spanning from April to November, in British Columbia over four consecutive years, starting in the Spring of 2015 and concluding in the Fall of 2018.The ITS2 region was amplified using a rust-enhanced primer pair Rust2inv (5′-GAT GAA GAA CAC AGT GAA A-3′) and ITS4var_H (5′- TCC TCY GCT TAT TGA TAT GC-3′). The re-amplified PCR products were sent to the Génome Québec Innovation Centre (Montréal, QC, Canada) for paired end PE300 sequencing using the Illumina MiSeq platform.

The raw sequencing data were processed using the DADA2 Divisive Amplicon Denoising pipeline wrapped in the Quantitative Insights Into Microbial Ecology version 2 (Qiime 2) bioinformatics suite [@RN2890], which allowed us to generate an Amplicon Sequence Variant (ASV) table. The ITS2 region of the representative sequences of the ASVs were extracted by ITSx [@RN5060].

More information about the dataset can be found in [@RN5164]

![Figure 1. Geographic location and environmental conditions at the spore sampling sites.](images/Figure1_sampling.site.and.metadata.jpg)

## Prepare data for AODP

### Import QIIME2 outputs

::: {.callout-note title="R Block"}
```{r, eval = TRUE, echo=TRUE, message=FALSE, warning=FALSE, results='hide'}
# load libraries
library(dplyr)
library(tidyr)
library(stringr)
library(Biostrings)
library(phyloseq)
```

```{r, eval = TRUE}
# import asv file
asv <- read.table("qiime2.outputs_and_metadata/feature-table.tsv", sep = "\t", header = TRUE, row.names = 1)
dim(asv) 
head(names(asv))
```

```{r, eval = TRUE}
# import q2 taxonomy 
tax <- read.table ("qiime2.outputs_and_metadata/taxonomy.tsv", sep = "\t", header = TRUE, row.names = 1) %>%
  mutate(Taxon=gsub("[dkpcofgs]__", "", Taxon)) %>%
  separate(
    col    = Taxon,
    into   = c("kingdom","phylum","class","order","family","genus","species"),
    sep    = ";",
    fill   = "right",    # pad missing pieces on the right with NA
    remove = TRUE       # remove the original Taxon column 
  ) %>%
  select(-Confidence) %>%
  # replace "unidentified to NA
  mutate(across(
    kingdom:species,
    ~ ifelse(is.na(.) | . == "unidentified", NA, .),  # (optional) re-NA any true missing
    .names = "{.col}"
  )) %>%
  # fix taxonomy to include LCA
  # now build each rank via coalesce() on the *original* columns
  mutate(
    class   = coalesce(class,   paste0(phylum,  "_sp")),
    order   = coalesce(order,   paste0(class,   "_sp")),
    family  = coalesce(family,  paste0(order,   "_sp")),
    genus   = coalesce(genus,   paste0(family,  "_sp")),
    species = coalesce(species, paste0(genus,   "_sp"))
  ) %>%
  mutate(across(
    kingdom:species,
    # collapse any run of "_sp" at the end into a single "_sp"
    function(x) {
      # collapse any run of "_sp" at the end into a single "_sp"
      sub("(_sp)+$", "_sp", x)
    }
  ))

dim(tax) # 11645     7
head(tax)

```

```{r, eval = TRUE}
# load phylogenetic tree
tree_file <- "qiime2.outputs_and_metadata/tree_rooted.nwk"
tree <- ape::read.tree(tree_file)
tree # 15668 tips
```

```{r, eval = TRUE, results='markup'}
# load ASV representative sequences
rep_file <- "qiime2.outputs_and_metadata/rep-seqs_ITS2.fasta"
rep <- Biostrings::readDNAStringSet(rep_file)
rep # 15395

# Filter for sequences with width ≥ 100 bp
rep_filtered <- rep[width(rep) >= 100]

# Check how many are retained
length(rep_filtered) # 15291

source("./scripts/functions.R")

color_dna(rep_filtered, n = 5)

```
:::

### Import metadata

::: {.callout-note title="R Block"}
```{r, eval = TRUE}
# load metadata
meta <- openxlsx::read.xlsx("qiime2.outputs_and_metadata/meta.xlsx", rowNames = TRUE)
head(meta[, 1:5])
dim(meta)
```
:::

## Create phyloseq object

::: {.callout-note title="R Block"}
```{r, eval = TRUE}
# create phyloseq object
ps_ASV <- otu_table(asv, taxa_are_rows = TRUE)
ps_TAX <- tax_table(as.matrix(tax))
ps_META <- sample_data(meta)
ps <- phyloseq(ps_ASV, ps_TAX) %>%
         merge_phyloseq(., ps_META) %>%
         merge_phyloseq(., tree) %>%
         merge_phyloseq(., rep)
ps

saveRDS(ps, "output/phyloseq_all.rds")

```
:::

## Subset the rust fungal community

::: {.callout-note title="R Block"}
```{r, eval = TRUE}
ps <- readRDS("output/phyloseq_all.rds")

# Subset rust fungal community only
ps.rust <- subset_taxa(ps, order == "Pucciniales") %>%
              # remove ASVs with zero reads
              prune_taxa(taxa_sums(.) > 0, . ) %>%
              # remove samples with zero reads
              prune_samples(sample_sums(.) > 0, .)

ps.rust
head(tax_table(ps.rust)[tax_table(ps.rust)[, "genus"]=="Puccinia", ])

saveRDS(ps.rust, "output/phyloseq_rust.rds")

```
:::

## Export representative sequences of rust fungi

::: {.callout-note title="R Block"}
```{r, eval = TRUE}
# keep sequences longer than 100 bp
rep.rust <- refseq(ps.rust) %>%
  { .[width(.) >= 100] }

# Write Pucciniales representative sequences  
Biostrings::writeXStringSet(rep.rust, "output/Pucciniales_asv.fasta", 
                            append=FALSE, width=20001,
                            compress=FALSE, compression_level=NA, format="fasta")

```
:::
